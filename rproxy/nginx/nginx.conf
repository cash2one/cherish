worker_processes 4;

events {
    worker_connections 1024;
    use epoll;
}

env DNS;
env CACHE_SERVICE;
env DB_SERVICE;
env POSTGRES_USER;
env POSTGRES_PASSWORD;
env POSTGRES_DATABASE;
env DB_CONN_TIMEOUT;
env ACCOUNT_SITE_ENDPOINT;
env PROXY_SITE_ENDPOINT;

http {
    include /opt/openresty/nginx/conf/mime.types;
    default_type application/octet-stream;
    access_log /dev/stdout;
    error_log /dev/stderr;

    lua_package_path '?.lua;middleware/?.lua;dns/?.lua;../lualib/resty/?.lua;;';
    # lua_code_cache off;

    # Only retry if there was a communication error, not a timeout
    # on the Tornado server (to avoid propagating "queries of death"
    # to all frontends)
    proxy_next_upstream error;

    server {
        listen 8000;
        server_name auth-online.yuncelian.com auth-online.zuoyetong.com.cn;

        client_max_body_size 1M;

        location = /favicon.ico {
            alias /code/static/favicon.ico;
        }

        location ^~ /static/ {
            alias /code/static/;
            if ($query_string) {
                expires max;
            }
        }

        location / {
            set_by_lua_block $srv_target { return os.getenv("ACCOUNT_SITE_ENDPOINT") }
            set_by_lua_block $ns_ip { return os.getenv("NS_IP") }
            set_by_lua_block $ns_port { return os.getenv("NS_PORT") }
            set $target '';
            access_by_lua_file dns/resolve.lua;

            include /opt/openresty/nginx/conf/uwsgi_params;
            uwsgi_param HTTP_X_REAL_IP $http_x_real_ip;
            uwsgi_pass $target;
        }
    }

    server {
        listen 8001;
        server_name yuncelian.com yuncelian.com.cn yunzuoye.org *.yuncelian.com *.yuncelian.com.cn *.yunzuoye.org;

        client_max_body_size 30M;

        # TODO : set application url redirect here.
        # location / {
        #     default_type text/html;
        #     content_by_lua_block {
        #         local header = ngx.req.get_headers()
        #         for k, v in pairs(header) do
        #             ngx.say(k, ": ", v)
        #         end
        #     }
        # }

        # ========================================
        # for yuncelian application
        location ~* \.(gif|jpg|jpeg|png|ico)$ {
            set_by_lua_block $target { return os.getenv("PROXY_SITE_ENDPOINT") }
            proxy_pass http://$target;
            proxy_set_header            Host $host;
            proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location ~ ^/(css|js)/?(.*) {
            set_by_lua_block $target { return os.getenv("PROXY_SITE_ENDPOINT") }
            proxy_pass http://$target;
            proxy_set_header            Host $host;
            proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location ~ ^/v2/account/(login|authToken)/?(.*) {
            set_by_lua_block $target { return os.getenv("PROXY_SITE_ENDPOINT") }
            proxy_pass http://$target;
            proxy_set_header            Host $host;
            proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location ~ ^/v2/account/(teacher|parent|student)/regist/?$ {
            set_by_lua_block $target { return os.getenv("PROXY_SITE_ENDPOINT") }
            proxy_pass http://$target;
            proxy_set_header            Host $host;
            proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location ~ ^/v2/op/user/add/update/?$ {
            set_by_lua_block $target { return os.getenv("PROXY_SITE_ENDPOINT") }
            proxy_pass http://$target;
            proxy_set_header            Host $host;
            proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        # add login token for all /v2 uri
        location ~ ^/v2/ {
            default_type text/html;
            set_by_lua_block $target { return os.getenv("PROXY_SITE_ENDPOINT") }
            rewrite_by_lua_file middleware/auth.lua;
            proxy_pass http://$target;
            proxy_set_header            Host $host;
            proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location / {
            set_by_lua_block $target { return os.getenv("PROXY_SITE_ENDPOINT") }
            proxy_pass http://$target;
            proxy_set_header            Host $host;
            proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
